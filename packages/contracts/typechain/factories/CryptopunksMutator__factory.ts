/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CryptopunksMutator,
  CryptopunksMutatorInterface,
} from "../CryptopunksMutator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICryptopunks",
        name: "_mutator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516101d33803806101d383398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161014961008a6000396000607801526101496000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636352211e14610030575b600080fd5b61004361003e3660046100f3565b61005f565b6040516001600160a01b03909116815260200160405180910390f35b604051630b02f02d60e31b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906358178168906024016020604051808303816000875af11580156100c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ed919061010c565b92915050565b60006020828403121561010557600080fd5b5035919050565b60006020828403121561011e57600080fd5b81516001600160a01b038116811461013557600080fd5b939250505056fea164736f6c634300080e000a";

type CryptopunksMutatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CryptopunksMutatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CryptopunksMutator__factory extends ContractFactory {
  constructor(...args: CryptopunksMutatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _mutator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CryptopunksMutator> {
    return super.deploy(
      _mutator,
      overrides || {}
    ) as Promise<CryptopunksMutator>;
  }
  getDeployTransaction(
    _mutator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_mutator, overrides || {});
  }
  attach(address: string): CryptopunksMutator {
    return super.attach(address) as CryptopunksMutator;
  }
  connect(signer: Signer): CryptopunksMutator__factory {
    return super.connect(signer) as CryptopunksMutator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CryptopunksMutatorInterface {
    return new utils.Interface(_abi) as CryptopunksMutatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CryptopunksMutator {
    return new Contract(address, _abi, signerOrProvider) as CryptopunksMutator;
  }
}
