/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PREMIERCollectible,
  PREMIERCollectibleInterface,
} from "../../../contracts/collectibles/PREMIERCollectible";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newURI",
        type: "string",
      },
    ],
    name: "setContractURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040819052600060a08190526200001b91600b916200011b565b506040805160208101918290526000908190526200003c91600c916200011b565b503480156200004a57600080fd5b50604051620020b4380380620020b48339810160408190526200006d916200028e565b825183908390620000869060009060208501906200011b565b5080516200009c9060019060208401906200011b565b505050620000b9620000b3620000c560201b60201c565b620000c9565b608052506200033d9050565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001299062000301565b90600052602060002090601f0160209004810192826200014d576000855562000198565b82601f106200016857805160ff191683800117855562000198565b8280016001018555821562000198579182015b82811115620001985782518255916020019190600101906200017b565b50620001a6929150620001aa565b5090565b5b80821115620001a65760008155600101620001ab565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001e957600080fd5b81516001600160401b0380821115620002065762000206620001c1565b604051601f8301601f19908116603f01168101908282118183101715620002315762000231620001c1565b816040528381526020925086838588010111156200024e57600080fd5b600091505b8382101562000272578582018301518183018401529082019062000253565b83821115620002845760008385830101525b9695505050505050565b600080600060608486031215620002a457600080fd5b83516001600160401b0380821115620002bc57600080fd5b620002ca87838801620001d7565b94506020860151915080821115620002e157600080fd5b50620002f086828701620001d7565b925050604084015190509250925092565b600181811c908216806200031657607f821691505b6020821081036200033757634e487b7160e01b600052602260045260246000fd5b50919050565b608051611d54620003606000396000818161037f01526106810152611d546000f3fe60806040526004361061014b5760003560e01c806370a08231116100b6578063a22cb4651161006f578063a22cb465146103a3578063b88d4fde146103c3578063c87b56dd146103e3578063e8a3d48514610403578063e985e9c514610418578063f2fde38b1461046157600080fd5b806370a08231146102e8578063715018a6146103085780638da5cb5b1461031d578063938e3d7b1461033b57806395d89b411461035b578063a035b1fe1461037057600080fd5b806323b872dd1161010857806323b872dd146102285780632f745c591461024857806342842e0e146102685780634f6ccce71461028857806355f804b3146102a85780636352211e146102c857600080fd5b806301ffc9a71461015057806306fdde0314610185578063081812fc146101a7578063095ea7b3146101df5780631249c58b1461020157806318160ddd14610209575b600080fd5b34801561015c57600080fd5b5061017061016b366004611831565b610481565b60405190151581526020015b60405180910390f35b34801561019157600080fd5b5061019a6104ac565b60405161017c91906118a6565b3480156101b357600080fd5b506101c76101c23660046118b9565b61053e565b6040516001600160a01b03909116815260200161017c565b3480156101eb57600080fd5b506101ff6101fa3660046118ee565b610565565b005b6101ff61067f565b34801561021557600080fd5b506008545b60405190815260200161017c565b34801561023457600080fd5b506101ff610243366004611918565b610725565b34801561025457600080fd5b5061021a6102633660046118ee565b610756565b34801561027457600080fd5b506101ff610283366004611918565b6107ec565b34801561029457600080fd5b5061021a6102a33660046118b9565b610807565b3480156102b457600080fd5b506101ff6102c33660046119e0565b61089a565b3480156102d457600080fd5b506101c76102e33660046118b9565b6108b9565b3480156102f457600080fd5b5061021a610303366004611a29565b610919565b34801561031457600080fd5b506101ff61099f565b34801561032957600080fd5b50600a546001600160a01b03166101c7565b34801561034757600080fd5b506101ff6103563660046119e0565b6109b3565b34801561036757600080fd5b5061019a6109ce565b34801561037c57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061021a565b3480156103af57600080fd5b506101ff6103be366004611a44565b6109dd565b3480156103cf57600080fd5b506101ff6103de366004611a80565b6109e8565b3480156103ef57600080fd5b5061019a6103fe3660046118b9565b610a20565b34801561040f57600080fd5b5061019a610a87565b34801561042457600080fd5b50610170610433366004611afc565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561046d57600080fd5b506101ff61047c366004611a29565b610a96565b60006001600160e01b0319821663780e9d6360e01b14806104a657506104a682610b0f565b92915050565b6060600080546104bb90611b2f565b80601f01602080910402602001604051908101604052809291908181526020018280546104e790611b2f565b80156105345780601f1061050957610100808354040283529160200191610534565b820191906000526020600020905b81548152906001019060200180831161051757829003601f168201915b5050505050905090565b600061054982610b5f565b506000908152600460205260409020546001600160a01b031690565b6000610570826108b9565b9050806001600160a01b0316836001600160a01b0316036105e25760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105fe57506105fe8133610433565b6106705760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016105d9565b61067a8383610bbe565b505050565b7f000000000000000000000000000000000000000000000000000000000000000034146106e05760405162461bcd60e51b815260206004820152600f60248201526e494e434f52524543545f46554e445360881b60448201526064016105d9565b60006106eb60085490565b90506106f73382610c2c565b60405181907f176b02bb2d12439ff7a20b59f402cca16c76f50508b13ef3166a600eb719354a90600090a250565b61072f3382610c46565b61074b5760405162461bcd60e51b81526004016105d990611b69565b61067a838383610cc5565b600061076183610919565b82106107c35760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016105d9565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61067a838383604051806020016040528060008152506109e8565b600061081260085490565b82106108755760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016105d9565b6008828154811061088857610888611bb6565b90600052602060002001549050919050565b6108a2610e36565b80516108b590600c906020840190611782565b5050565b6000818152600260205260408120546001600160a01b0316806104a65760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105d9565b60006001600160a01b0382166109835760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016105d9565b506001600160a01b031660009081526003602052604090205490565b6109a7610e36565b6109b16000610e90565b565b6109bb610e36565b80516108b590600b906020840190611782565b6060600180546104bb90611b2f565b6108b5338383610ee2565b6109f23383610c46565b610a0e5760405162461bcd60e51b81526004016105d990611b69565b610a1a84848484610fb0565b50505050565b6060610a2b82610b5f565b6000610a35610fe3565b90506000815111610a555760405180602001604052806000815250610a80565b80610a5f84610ff2565b604051602001610a70929190611bcc565b6040516020818303038152906040525b9392505050565b6060600b80546104bb90611b2f565b610a9e610e36565b6001600160a01b038116610b035760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105d9565b610b0c81610e90565b50565b60006001600160e01b031982166380ac58cd60e01b1480610b4057506001600160e01b03198216635b5e139f60e01b145b806104a657506301ffc9a760e01b6001600160e01b03198316146104a6565b6000818152600260205260409020546001600160a01b0316610b0c5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105d9565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610bf3826108b9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6108b5828260405180602001604052806000815250611085565b600080610c52836108b9565b9050806001600160a01b0316846001600160a01b03161480610c9957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610cbd5750836001600160a01b0316610cb28461053e565b6001600160a01b0316145b949350505050565b826001600160a01b0316610cd8826108b9565b6001600160a01b031614610cfe5760405162461bcd60e51b81526004016105d990611bfb565b6001600160a01b038216610d605760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105d9565b610d6d83838360016110b8565b826001600160a01b0316610d80826108b9565b6001600160a01b031614610da65760405162461bcd60e51b81526004016105d990611bfb565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a546001600160a01b031633146109b15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d9565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610f435760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105d9565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610fbb848484610cc5565b610fc7848484846111f8565b610a1a5760405162461bcd60e51b81526004016105d990611c40565b6060600c80546104bb90611b2f565b60606000610fff836112f9565b600101905060008167ffffffffffffffff81111561101f5761101f611954565b6040519080825280601f01601f191660200182016040528015611049576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461105357509392505050565b61108f83836113d1565b61109c60008484846111f8565b61067a5760405162461bcd60e51b81526004016105d990611c40565b6110c48484848461156a565b60018111156111335760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b60648201526084016105d9565b816001600160a01b03851661118f5761118a81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6111b2565b836001600160a01b0316856001600160a01b0316146111b2576111b285826115f2565b6001600160a01b0384166111ce576111c98161168f565b6111f1565b846001600160a01b0316846001600160a01b0316146111f1576111f1848261173e565b5050505050565b60006001600160a01b0384163b156112ee57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061123c903390899088908890600401611c92565b6020604051808303816000875af1925050508015611277575060408051601f3d908101601f1916820190925261127491810190611ccf565b60015b6112d4573d8080156112a5576040519150601f19603f3d011682016040523d82523d6000602084013e6112aa565b606091505b5080516000036112cc5760405162461bcd60e51b81526004016105d990611c40565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610cbd565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106113385772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611364576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061138257662386f26fc10000830492506010015b6305f5e100831061139a576305f5e100830492506008015b61271083106113ae57612710830492506004015b606483106113c0576064830492506002015b600a83106104a65760010192915050565b6001600160a01b0382166114275760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105d9565b6000818152600260205260409020546001600160a01b03161561148c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105d9565b61149a6000838360016110b8565b6000818152600260205260409020546001600160a01b0316156114ff5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105d9565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001811115610a1a576001600160a01b038416156115b0576001600160a01b038416600090815260036020526040812080548392906115aa908490611d02565b90915550505b6001600160a01b03831615610a1a576001600160a01b038316600090815260036020526040812080548392906115e7908490611d19565b909155505050505050565b600060016115ff84610919565b6116099190611d02565b60008381526007602052604090205490915080821461165c576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906116a190600190611d02565b600083815260096020526040812054600880549394509092849081106116c9576116c9611bb6565b9060005260206000200154905080600883815481106116ea576116ea611bb6565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061172257611722611d31565b6001900381819060005260206000200160009055905550505050565b600061174983610919565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b82805461178e90611b2f565b90600052602060002090601f0160209004810192826117b057600085556117f6565b82601f106117c957805160ff19168380011785556117f6565b828001600101855582156117f6579182015b828111156117f65782518255916020019190600101906117db565b50611802929150611806565b5090565b5b808211156118025760008155600101611807565b6001600160e01b031981168114610b0c57600080fd5b60006020828403121561184357600080fd5b8135610a808161181b565b60005b83811015611869578181015183820152602001611851565b83811115610a1a5750506000910152565b6000815180845261189281602086016020860161184e565b601f01601f19169290920160200192915050565b602081526000610a80602083018461187a565b6000602082840312156118cb57600080fd5b5035919050565b80356001600160a01b03811681146118e957600080fd5b919050565b6000806040838503121561190157600080fd5b61190a836118d2565b946020939093013593505050565b60008060006060848603121561192d57600080fd5b611936846118d2565b9250611944602085016118d2565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561198557611985611954565b604051601f8501601f19908116603f011681019082821181831017156119ad576119ad611954565b816040528093508581528686860111156119c657600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156119f257600080fd5b813567ffffffffffffffff811115611a0957600080fd5b8201601f81018413611a1a57600080fd5b610cbd8482356020840161196a565b600060208284031215611a3b57600080fd5b610a80826118d2565b60008060408385031215611a5757600080fd5b611a60836118d2565b915060208301358015158114611a7557600080fd5b809150509250929050565b60008060008060808587031215611a9657600080fd5b611a9f856118d2565b9350611aad602086016118d2565b925060408501359150606085013567ffffffffffffffff811115611ad057600080fd5b8501601f81018713611ae157600080fd5b611af08782356020840161196a565b91505092959194509250565b60008060408385031215611b0f57600080fd5b611b18836118d2565b9150611b26602084016118d2565b90509250929050565b600181811c90821680611b4357607f821691505b602082108103611b6357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60008351611bde81846020880161184e565b835190830190611bf281836020880161184e565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611cc59083018461187a565b9695505050505050565b600060208284031215611ce157600080fd5b8151610a808161181b565b634e487b7160e01b600052601160045260246000fd5b600082821015611d1457611d14611cec565b500390565b60008219821115611d2c57611d2c611cec565b500190565b634e487b7160e01b600052603160045260246000fdfea164736f6c634300080e000a";

type PREMIERCollectibleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PREMIERCollectibleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PREMIERCollectible__factory extends ContractFactory {
  constructor(...args: PREMIERCollectibleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PREMIERCollectible> {
    return super.deploy(
      _name,
      _symbol,
      _price,
      overrides || {}
    ) as Promise<PREMIERCollectible>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, _price, overrides || {});
  }
  override attach(address: string): PREMIERCollectible {
    return super.attach(address) as PREMIERCollectible;
  }
  override connect(signer: Signer): PREMIERCollectible__factory {
    return super.connect(signer) as PREMIERCollectible__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PREMIERCollectibleInterface {
    return new utils.Interface(_abi) as PREMIERCollectibleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PREMIERCollectible {
    return new Contract(address, _abi, signerOrProvider) as PREMIERCollectible;
  }
}
