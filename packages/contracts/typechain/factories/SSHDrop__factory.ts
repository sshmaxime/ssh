/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SSHDrop, SSHDropInterface } from "../SSHDrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_versions",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Mutated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dropId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dropURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getDropItem",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isMutable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "versionId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "contractMutator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenIdMutator",
            type: "uint256",
          },
        ],
        internalType: "struct DropItem",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "versionId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenIdToMutate",
        type: "uint256",
      },
      {
        internalType: "contract IERC721",
        name: "contractMutator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenIdMutator",
        type: "uint256",
      },
    ],
    name: "mutateDropItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newURI",
        type: "string",
      },
    ],
    name: "setDropURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mutatorContract",
        type: "address",
      },
      {
        internalType: "contract IMutator",
        name: "_imutator",
        type: "address",
      },
    ],
    name: "setMutator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x610120604081905260006101008190526200001d91600b916200043b565b503480156200002b57600080fd5b5060405162002a3f38038062002a3f8339810160408190526200004e91620004e1565b6040518060400160405280600e81526020016d029a9a4102620a12990222927a8160951b8152506200008b856200017660201b620011241760201c565b6040516020016200009e92919062000556565b6040516020818303038152906040526040518060400160405280600681526020016544524f50202360d01b815250620000e2866200017660201b620011241760201c565b604051602001620000f592919062000556565b60408051601f1981840301815291905281516200011a9060009060208501906200043b565b508051620001309060019060208401906200043b565b5050506200014d620001476200021a60201b60201c565b6200021e565b608084905260a083905260c082905260e08190526200016c3262000270565b50505050620005c9565b606060006200019083620002f360201b620011b71760201c565b60010190506000816001600160401b03811115620001b257620001b262000577565b6040519080825280601f01601f191660200182016040528015620001dd576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084620001e757509392505050565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6200027a620003dd565b6001600160a01b038116620002e55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b620002f0816200021e565b50565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106200033d577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106200036a576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106200038957662386f26fc10000830492506010015b6305f5e1008310620003a2576305f5e100830492506008015b6127108310620003b757612710830492506004015b60648310620003ca576064830492506002015b600a8310620003d7576001015b92915050565b600a546001600160a01b03163314620004395760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620002dc565b565b82805462000449906200058d565b90600052602060002090601f0160209004810192826200046d5760008555620004b8565b82601f106200048857805160ff1916838001178555620004b8565b82800160010185558215620004b8579182015b82811115620004b85782518255916020019190600101906200049b565b50620004c6929150620004ca565b5090565b5b80821115620004c65760008155600101620004cb565b60008060008060808587031215620004f857600080fd5b505082516020840151604085015160609095015191969095509092509050565b6000815160005b818110156200053b57602081850181015186830152016200051f565b818111156200054b576000828601525b509290920192915050565b60006200056f62000568838662000518565b8462000518565b949350505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620005a257607f821691505b602082108103620005c357634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161242e620006116000396000610bb60152600081816104690152610c1a01526000818161052f0152610b51015260006102d0015261242e6000f3fe6080604052600436106101b75760003560e01c8063715018a6116100ec578063b88d4fde1161008a578063d5abeb0111610064578063d5abeb0114610520578063e985e9c514610553578063edc5d1581461059c578063f2fde38b146105bc57600080fd5b8063b88d4fde146104c0578063c87b56dd146104e0578063c8a751261461050057600080fd5b806395d89b41116100c657806395d89b4114610445578063a035b1fe1461045a578063a0712d681461048d578063a22cb465146104a057600080fd5b8063715018a6146103f257806379575294146104075780638da5cb5b1461042757600080fd5b80632a778c9b116101595780634f6ccce7116101335780634f6ccce7146103345780634fe9f69f146103545780636352211e146103b257806370a08231146103d257600080fd5b80632a778c9b146102c15780632f745c59146102f457806342842e0e1461031457600080fd5b8063095ea7b311610195578063095ea7b31461024b57806317f389591461026d57806318160ddd1461028257806323b872dd146102a157600080fd5b806301ffc9a7146101bc57806306fdde03146101f1578063081812fc14610213575b600080fd5b3480156101c857600080fd5b506101dc6101d7366004611e9d565b6105dc565b60405190151581526020015b60405180910390f35b3480156101fd57600080fd5b50610206610607565b6040516101e89190611f12565b34801561021f57600080fd5b5061023361022e366004611f25565b610699565b6040516001600160a01b0390911681526020016101e8565b34801561025757600080fd5b5061026b610266366004611f53565b6106c0565b005b34801561027957600080fd5b506102066107da565b34801561028e57600080fd5b506008545b6040519081526020016101e8565b3480156102ad57600080fd5b5061026b6102bc366004611f7f565b6107e9565b3480156102cd57600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610293565b34801561030057600080fd5b5061029361030f366004611f53565b61081a565b34801561032057600080fd5b5061026b61032f366004611f7f565b6108b0565b34801561034057600080fd5b5061029361034f366004611f25565b6108cb565b34801561036057600080fd5b5061037461036f366004611f25565b61095e565b6040516101e89190815115158152602080830151908201526040808301516001600160a01b0316908201526060918201519181019190915260800190565b3480156103be57600080fd5b506102336103cd366004611f25565b610a1a565b3480156103de57600080fd5b506102936103ed366004611fc0565b610a7a565b3480156103fe57600080fd5b5061026b610b00565b34801561041357600080fd5b5061026b610422366004612069565b610b14565b34801561043357600080fd5b50600a546001600160a01b0316610233565b34801561045157600080fd5b50610206610b33565b34801561046657600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610293565b61026b61049b366004611f25565b610b42565b3480156104ac57600080fd5b5061026b6104bb3660046120b2565b610d2c565b3480156104cc57600080fd5b5061026b6104db3660046120f0565b610d37565b3480156104ec57600080fd5b506102066104fb366004611f25565b610d6f565b34801561050c57600080fd5b5061026b61051b366004612170565b610de3565b34801561052c57600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610293565b34801561055f57600080fd5b506101dc61056e366004612197565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156105a857600080fd5b5061026b6105b7366004612197565b611075565b3480156105c857600080fd5b5061026b6105d7366004611fc0565b6110ab565b60006001600160e01b0319821663780e9d6360e01b148061060157506106018261128f565b92915050565b606060008054610616906121c5565b80601f0160208091040260200160405190810160405280929190818152602001828054610642906121c5565b801561068f5780601f106106645761010080835404028352916020019161068f565b820191906000526020600020905b81548152906001019060200180831161067257829003601f168201915b5050505050905090565b60006106a4826112df565b506000908152600460205260409020546001600160a01b031690565b60006106cb82610a1a565b9050806001600160a01b0316836001600160a01b03160361073d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806107595750610759813361056e565b6107cb5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610734565b6107d5838361133e565b505050565b6060600b8054610616906121c5565b6107f333826113ac565b61080f5760405162461bcd60e51b8152600401610734906121ff565b6107d583838361142b565b600061082583610a7a565b82106108875760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610734565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6107d583838360405180602001604052806000815250610d37565b60006108d660085490565b82106109395760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610734565b6008828154811061094c5761094c61224c565b90600052602060002001549050919050565b60408051608081018252600080825260208201819052918101829052606081019190915260085482106109c75760405162461bcd60e51b8152602060048201526011602482015270125390d3d4949150d517d513d2d1539251607a1b6044820152606401610734565b506000908152600c60209081526040918290208251608081018452815460ff161515815260018201549281019290925260028101546001600160a01b031692820192909252600390910154606082015290565b6000818152600260205260408120546001600160a01b0316806106015760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610734565b60006001600160a01b038216610ae45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610734565b506001600160a01b031660009081526003602052604090205490565b610b0861159c565b610b1260006115f6565b565b610b1c61159c565b8051610b2f90600b906020840190611dee565b5050565b606060018054610616906121c5565b6000610b4d60085490565b90507f0000000000000000000000000000000000000000000000000000000000000000808210610bb45760405162461bcd60e51b815260206004820152601260248201527113505617d4d55414131657d4915050d2115160721b6044820152606401610734565b7f0000000000000000000000000000000000000000000000000000000000000000831115610c185760405162461bcd60e51b815260206004820152601160248201527024a721a7a92922a1aa2fab22a929a4a7a760791b6044820152606401610734565b7f00000000000000000000000000000000000000000000000000000000000000003414610c795760405162461bcd60e51b815260206004820152600f60248201526e494e434f52524543545f46554e445360881b6044820152606401610734565b610c8283611648565b610c8c338361168d565b6040805160808101825260018082526020808301878152600084860181815260608601828152898352600c9094528682209551865460ff1916901515178655915193850193909355516002840180546001600160a01b0319166001600160a01b0390921691909117905551600390920191909155905183917f176b02bb2d12439ff7a20b59f402cca16c76f50508b13ef3166a600eb719354a91a2505050565b610b2f3383836116a7565b610d4133836113ac565b610d5d5760405162461bcd60e51b8152600401610734906121ff565b610d6984848484611775565b50505050565b6060610d7a826112df565b6000610d9160408051602081019091526000815290565b90506000815111610db15760405180602001604052806000815250610ddc565b80610dbb84611124565b604051602001610dcc929190612262565b6040516020818303038152906040525b9392505050565b6000610dee60085490565b9050808410610e375760405162461bcd60e51b81526020600482015260156024820152741513d2d1538812510813d5550813d1881093d55391605a1b6044820152606401610734565b6040516331a9108f60e11b81526004810185905232903090636352211e90602401602060405180830381865afa158015610e75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e999190612291565b6001600160a01b031614610ebf5760405162461bcd60e51b8152600401610734906122ae565b6001600160a01b038084166000908152600d60205260409020541680610f75576040516331a9108f60e11b81526004810184905232906001600160a01b03861690636352211e90602401602060405180830381865afa158015610f26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4a9190612291565b6001600160a01b031614610f705760405162461bcd60e51b8152600401610734906122ae565b611008565b6040516331a9108f60e11b81526004810184905232906001600160a01b03831690636352211e906024016020604051808303816000875af1158015610fbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe29190612291565b6001600160a01b0316146110085760405162461bcd60e51b8152600401610734906122ae565b6000858152600c60205260408082206002810180546001600160a01b0319166001600160a01b03891617905560038101869055805460ff191681559051909187917fe0ff833392b9f001daba1da86ad0f9c9ab3f34ddd5a7dc6f7d3dffee0df8110e9190a2505050505050565b61107d61159c565b6001600160a01b039182166000908152600d6020526040902080546001600160a01b03191691909216179055565b6110b361159c565b6001600160a01b0381166111185760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610734565b611121816115f6565b50565b60606000611131836111b7565b600101905060008167ffffffffffffffff81111561115157611151611fdd565b6040519080825280601f01601f19166020018201604052801561117b576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461118557509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106111f65772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611222576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061124057662386f26fc10000830492506010015b6305f5e1008310611258576305f5e100830492506008015b612710831061126c57612710830492506004015b6064831061127e576064830492506002015b600a83106106015760010192915050565b60006001600160e01b031982166380ac58cd60e01b14806112c057506001600160e01b03198216635b5e139f60e01b145b8061060157506301ffc9a760e01b6001600160e01b0319831614610601565b6000818152600260205260409020546001600160a01b03166111215760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610734565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061137382610a1a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806113b883610a1a565b9050806001600160a01b0316846001600160a01b031614806113ff57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806114235750836001600160a01b031661141884610699565b6001600160a01b0316145b949350505050565b826001600160a01b031661143e82610a1a565b6001600160a01b0316146114645760405162461bcd60e51b8152600401610734906122d5565b6001600160a01b0382166114c65760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610734565b6114d383838360016117a8565b826001600160a01b03166114e682610a1a565b6001600160a01b03161461150c5760405162461bcd60e51b8152600401610734906122d5565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a546001600160a01b03163314610b125760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610734565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6111218160405160240161165e91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f82c50f160e01b1790526118e8565b610b2f828260405180602001604052806000815250611909565b816001600160a01b0316836001600160a01b0316036117085760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610734565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61178084848461142b565b61178c8484848461193c565b610d695760405162461bcd60e51b81526004016107349061231a565b6117b484848484611a3d565b60018111156118235760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b6064820152608401610734565b816001600160a01b03851661187f5761187a81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6118a2565b836001600160a01b0316856001600160a01b0316146118a2576118a28582611ac5565b6001600160a01b0384166118be576118b981611b62565b6118e1565b846001600160a01b0316846001600160a01b0316146118e1576118e18482611c11565b5050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6119138383611c55565b611920600084848461193c565b6107d55760405162461bcd60e51b81526004016107349061231a565b60006001600160a01b0384163b15611a3257604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061198090339089908890889060040161236c565b6020604051808303816000875af19250505080156119bb575060408051601f3d908101601f191682019092526119b8918101906123a9565b60015b611a18573d8080156119e9576040519150601f19603f3d011682016040523d82523d6000602084013e6119ee565b606091505b508051600003611a105760405162461bcd60e51b81526004016107349061231a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611423565b506001949350505050565b6001811115610d69576001600160a01b03841615611a83576001600160a01b03841660009081526003602052604081208054839290611a7d9084906123dc565b90915550505b6001600160a01b03831615610d69576001600160a01b03831660009081526003602052604081208054839290611aba9084906123f3565b909155505050505050565b60006001611ad284610a7a565b611adc91906123dc565b600083815260076020526040902054909150808214611b2f576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611b74906001906123dc565b60008381526009602052604081205460088054939450909284908110611b9c57611b9c61224c565b906000526020600020015490508060088381548110611bbd57611bbd61224c565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611bf557611bf561240b565b6001900381819060005260206000200160009055905550505050565b6000611c1c83610a7a565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b038216611cab5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610734565b6000818152600260205260409020546001600160a01b031615611d105760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610734565b611d1e6000838360016117a8565b6000818152600260205260409020546001600160a01b031615611d835760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610734565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611dfa906121c5565b90600052602060002090601f016020900481019282611e1c5760008555611e62565b82601f10611e3557805160ff1916838001178555611e62565b82800160010185558215611e62579182015b82811115611e62578251825591602001919060010190611e47565b50611e6e929150611e72565b5090565b5b80821115611e6e5760008155600101611e73565b6001600160e01b03198116811461112157600080fd5b600060208284031215611eaf57600080fd5b8135610ddc81611e87565b60005b83811015611ed5578181015183820152602001611ebd565b83811115610d695750506000910152565b60008151808452611efe816020860160208601611eba565b601f01601f19169290920160200192915050565b602081526000610ddc6020830184611ee6565b600060208284031215611f3757600080fd5b5035919050565b6001600160a01b038116811461112157600080fd5b60008060408385031215611f6657600080fd5b8235611f7181611f3e565b946020939093013593505050565b600080600060608486031215611f9457600080fd5b8335611f9f81611f3e565b92506020840135611faf81611f3e565b929592945050506040919091013590565b600060208284031215611fd257600080fd5b8135610ddc81611f3e565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561200e5761200e611fdd565b604051601f8501601f19908116603f0116810190828211818310171561203657612036611fdd565b8160405280935085815286868601111561204f57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561207b57600080fd5b813567ffffffffffffffff81111561209257600080fd5b8201601f810184136120a357600080fd5b61142384823560208401611ff3565b600080604083850312156120c557600080fd5b82356120d081611f3e565b9150602083013580151581146120e557600080fd5b809150509250929050565b6000806000806080858703121561210657600080fd5b843561211181611f3e565b9350602085013561212181611f3e565b925060408501359150606085013567ffffffffffffffff81111561214457600080fd5b8501601f8101871361215557600080fd5b61216487823560208401611ff3565b91505092959194509250565b60008060006060848603121561218557600080fd5b833592506020840135611faf81611f3e565b600080604083850312156121aa57600080fd5b82356121b581611f3e565b915060208301356120e581611f3e565b600181811c908216806121d957607f821691505b6020821081036121f957634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60008351612274818460208801611eba565b835190830190612288818360208801611eba565b01949350505050565b6000602082840312156122a357600080fd5b8151610ddc81611f3e565b6020808252600d908201526c24a72b20a624a22fa7aba722a960991b604082015260600190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061239f90830184611ee6565b9695505050505050565b6000602082840312156123bb57600080fd5b8151610ddc81611e87565b634e487b7160e01b600052601160045260246000fd5b6000828210156123ee576123ee6123c6565b500390565b60008219821115612406576124066123c6565b500190565b634e487b7160e01b600052603160045260246000fdfea164736f6c634300080e000a";

type SSHDropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SSHDropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SSHDrop__factory extends ContractFactory {
  constructor(...args: SSHDropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    id: BigNumberish,
    _maxSupply: BigNumberish,
    _price: BigNumberish,
    _versions: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SSHDrop> {
    return super.deploy(
      id,
      _maxSupply,
      _price,
      _versions,
      overrides || {}
    ) as Promise<SSHDrop>;
  }
  getDeployTransaction(
    id: BigNumberish,
    _maxSupply: BigNumberish,
    _price: BigNumberish,
    _versions: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      id,
      _maxSupply,
      _price,
      _versions,
      overrides || {}
    );
  }
  attach(address: string): SSHDrop {
    return super.attach(address) as SSHDrop;
  }
  connect(signer: Signer): SSHDrop__factory {
    return super.connect(signer) as SSHDrop__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SSHDropInterface {
    return new utils.Interface(_abi) as SSHDropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SSHDrop {
    return new Contract(address, _abi, signerOrProvider) as SSHDrop;
  }
}
