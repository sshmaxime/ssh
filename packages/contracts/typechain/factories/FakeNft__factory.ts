/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FakeNft, FakeNftInterface } from "../FakeNft";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001afa38038062001afa8339810160408190526200003491620001e1565b8151829082906200004d9060009060208501906200006e565b508051620000639060019060208401906200006e565b505050505062000287565b8280546200007c906200024b565b90600052602060002090601f016020900481019282620000a05760008555620000eb565b82601f10620000bb57805160ff1916838001178555620000eb565b82800160010185558215620000eb579182015b82811115620000eb578251825591602001919060010190620000ce565b50620000f9929150620000fd565b5090565b5b80821115620000f95760008155600101620000fe565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013c57600080fd5b81516001600160401b038082111562000159576200015962000114565b604051601f8301601f19908116603f0116810190828211818310171562000184576200018462000114565b81604052838152602092508683858801011115620001a157600080fd5b600091505b83821015620001c55785820183015181830184015290820190620001a6565b83821115620001d75760008385830101525b9695505050505050565b60008060408385031215620001f557600080fd5b82516001600160401b03808211156200020d57600080fd5b6200021b868387016200012a565b935060208501519150808211156200023257600080fd5b5062000241858286016200012a565b9150509250929050565b600181811c908216806200026057607f821691505b6020821081036200028157634e487b7160e01b600052602260045260246000fd5b50919050565b61186380620002976000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80634f6ccce7116100a2578063a0712d6811610071578063a0712d6814610219578063a22cb4651461022c578063b88d4fde1461023f578063c87b56dd14610252578063e985e9c51461026557600080fd5b80634f6ccce7146101d85780636352211e146101eb57806370a08231146101fe57806395d89b411461021157600080fd5b806318160ddd116100de57806318160ddd1461018d57806323b872dd1461019f5780632f745c59146101b257806342842e0e146101c557600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e36600461139f565b6102a1565b60405190151581526020015b60405180910390f35b6101406102cc565b60405161012f9190611414565b61016061015b366004611427565b61035e565b6040516001600160a01b03909116815260200161012f565b61018b61018636600461145c565b610385565b005b6008545b60405190815260200161012f565b61018b6101ad366004611486565b61049f565b6101916101c036600461145c565b6104d0565b61018b6101d3366004611486565b610566565b6101916101e6366004611427565b610581565b6101606101f9366004611427565b610614565b61019161020c3660046114c2565b610674565b6101406106fa565b61018b610227366004611427565b610709565b61018b61023a3660046114dd565b610716565b61018b61024d36600461152f565b610725565b610140610260366004611427565b61075d565b61012361027336600461160b565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b0319821663780e9d6360e01b14806102c657506102c6826107d1565b92915050565b6060600080546102db9061163e565b80601f01602080910402602001604051908101604052809291908181526020018280546103079061163e565b80156103545780601f1061032957610100808354040283529160200191610354565b820191906000526020600020905b81548152906001019060200180831161033757829003601f168201915b5050505050905090565b600061036982610821565b506000908152600460205260409020546001600160a01b031690565b600061039082610614565b9050806001600160a01b0316836001600160a01b0316036104025760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061041e575061041e8133610273565b6104905760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103f9565b61049a8383610880565b505050565b6104a933826108ee565b6104c55760405162461bcd60e51b81526004016103f990611678565b61049a83838361096d565b60006104db83610674565b821061053d5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016103f9565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61049a83838360405180602001604052806000815250610725565b600061058c60085490565b82106105ef5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016103f9565b60088281548110610602576106026116c5565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806102c65760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103f9565b60006001600160a01b0382166106de5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103f9565b506001600160a01b031660009081526003602052604090205490565b6060600180546102db9061163e565b6107133382610ade565b50565b610721338383610af8565b5050565b61072f33836108ee565b61074b5760405162461bcd60e51b81526004016103f990611678565b61075784848484610bc6565b50505050565b606061076882610821565b600061077f60408051602081019091526000815290565b9050600081511161079f57604051806020016040528060008152506107ca565b806107a984610bf9565b6040516020016107ba9291906116db565b6040516020818303038152906040525b9392505050565b60006001600160e01b031982166380ac58cd60e01b148061080257506001600160e01b03198216635b5e139f60e01b145b806102c657506301ffc9a760e01b6001600160e01b03198316146102c6565b6000818152600260205260409020546001600160a01b03166107135760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103f9565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906108b582610614565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806108fa83610614565b9050806001600160a01b0316846001600160a01b0316148061094157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806109655750836001600160a01b031661095a8461035e565b6001600160a01b0316145b949350505050565b826001600160a01b031661098082610614565b6001600160a01b0316146109a65760405162461bcd60e51b81526004016103f99061170a565b6001600160a01b038216610a085760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103f9565b610a158383836001610c8c565b826001600160a01b0316610a2882610614565b6001600160a01b031614610a4e5760405162461bcd60e51b81526004016103f99061170a565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610721828260405180602001604052806000815250610dcc565b816001600160a01b0316836001600160a01b031603610b595760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103f9565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610bd184848461096d565b610bdd84848484610dff565b6107575760405162461bcd60e51b81526004016103f99061174f565b60606000610c0683610f00565b600101905060008167ffffffffffffffff811115610c2657610c26611519565b6040519080825280601f01601f191660200182016040528015610c50576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610c5a57509392505050565b610c9884848484610fd8565b6001811115610d075760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b60648201526084016103f9565b816001600160a01b038516610d6357610d5e81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b610d86565b836001600160a01b0316856001600160a01b031614610d8657610d868582611060565b6001600160a01b038416610da257610d9d816110fd565b610dc5565b846001600160a01b0316846001600160a01b031614610dc557610dc584826111ac565b5050505050565b610dd683836111f0565b610de36000848484610dff565b61049a5760405162461bcd60e51b81526004016103f99061174f565b60006001600160a01b0384163b15610ef557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610e439033908990889088906004016117a1565b6020604051808303816000875af1925050508015610e7e575060408051601f3d908101601f19168201909252610e7b918101906117de565b60015b610edb573d808015610eac576040519150601f19603f3d011682016040523d82523d6000602084013e610eb1565b606091505b508051600003610ed35760405162461bcd60e51b81526004016103f99061174f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610965565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610f3f5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f6b576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f8957662386f26fc10000830492506010015b6305f5e1008310610fa1576305f5e100830492506008015b6127108310610fb557612710830492506004015b60648310610fc7576064830492506002015b600a83106102c65760010192915050565b6001811115610757576001600160a01b0384161561101e576001600160a01b03841660009081526003602052604081208054839290611018908490611811565b90915550505b6001600160a01b03831615610757576001600160a01b03831660009081526003602052604081208054839290611055908490611828565b909155505050505050565b6000600161106d84610674565b6110779190611811565b6000838152600760205260409020549091508082146110ca576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061110f90600190611811565b60008381526009602052604081205460088054939450909284908110611137576111376116c5565b906000526020600020015490508060088381548110611158576111586116c5565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061119057611190611840565b6001900381819060005260206000200160009055905550505050565b60006111b783610674565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b0382166112465760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103f9565b6000818152600260205260409020546001600160a01b0316156112ab5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103f9565b6112b9600083836001610c8c565b6000818152600260205260409020546001600160a01b03161561131e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103f9565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461071357600080fd5b6000602082840312156113b157600080fd5b81356107ca81611389565b60005b838110156113d75781810151838201526020016113bf565b838111156107575750506000910152565b600081518084526114008160208601602086016113bc565b601f01601f19169290920160200192915050565b6020815260006107ca60208301846113e8565b60006020828403121561143957600080fd5b5035919050565b80356001600160a01b038116811461145757600080fd5b919050565b6000806040838503121561146f57600080fd5b61147883611440565b946020939093013593505050565b60008060006060848603121561149b57600080fd5b6114a484611440565b92506114b260208501611440565b9150604084013590509250925092565b6000602082840312156114d457600080fd5b6107ca82611440565b600080604083850312156114f057600080fd5b6114f983611440565b91506020830135801515811461150e57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561154557600080fd5b61154e85611440565b935061155c60208601611440565b925060408501359150606085013567ffffffffffffffff8082111561158057600080fd5b818701915087601f83011261159457600080fd5b8135818111156115a6576115a6611519565b604051601f8201601f19908116603f011681019083821181831017156115ce576115ce611519565b816040528281528a60208487010111156115e757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561161e57600080fd5b61162783611440565b915061163560208401611440565b90509250929050565b600181811c9082168061165257607f821691505b60208210810361167257634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600083516116ed8184602088016113bc565b8351908301906117018183602088016113bc565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906117d4908301846113e8565b9695505050505050565b6000602082840312156117f057600080fd5b81516107ca81611389565b634e487b7160e01b600052601160045260246000fd5b600082821015611823576118236117fb565b500390565b6000821982111561183b5761183b6117fb565b500190565b634e487b7160e01b600052603160045260246000fdfea164736f6c634300080e000a";

type FakeNftConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FakeNftConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FakeNft__factory extends ContractFactory {
  constructor(...args: FakeNftConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FakeNft> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<FakeNft>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  attach(address: string): FakeNft {
    return super.attach(address) as FakeNft;
  }
  connect(signer: Signer): FakeNft__factory {
    return super.connect(signer) as FakeNft__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FakeNftInterface {
    return new utils.Interface(_abi) as FakeNftInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FakeNft {
    return new Contract(address, _abi, signerOrProvider) as FakeNft;
  }
}
