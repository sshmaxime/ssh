import { Signer, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Drop, DropInterface } from "../../contracts/Drop";
type DropConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class Drop__factory extends ContractFactory {
    constructor(...args: DropConstructorParams);
    deploy(id: PromiseOrValue<BigNumberish>, _maxSupply: PromiseOrValue<BigNumberish>, _price: PromiseOrValue<BigNumberish>, _versions: PromiseOrValue<BigNumberish>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<Drop>;
    getDeployTransaction(id: PromiseOrValue<BigNumberish>, _maxSupply: PromiseOrValue<BigNumberish>, _price: PromiseOrValue<BigNumberish>, _versions: PromiseOrValue<BigNumberish>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): Drop;
    connect(signer: Signer): Drop__factory;
    static readonly bytecode = "0x610120604081905260006101008190526200001d91600c916200049b565b506040805160208101918290526000908190526200003e91600d916200049b565b506040805160208101918290526000908190526200005f91600e916200049b565b503480156200006d57600080fd5b5060405162002d6e38038062002d6e833981016040819052620000909162000541565b6040518060400160405280600581526020016444524f502360d81b815250620000c485620001d660201b620013471760201c565b604051602001620000d7929190620005b6565b6040516020818303038152906040526040518060400160405280600581526020016444524f502360d81b8152506200011a86620001d660201b620013471760201c565b6040516020016200012d929190620005b6565b60408051601f198184030181529190528151620001529060009060208501906200049b565b508051620001689060019060208401906200049b565b505050620001856200017f6200027a60201b60201c565b6200027e565b6001600b556000819003620001ad57604051631e54b82b60e11b815260040160405180910390fd5b608084905260a083905260c082905260e0819052620001cc32620002d0565b5050505062000629565b60606000620001f0836200035360201b620013da1760201c565b60010190506000816001600160401b03811115620002125762000212620005d7565b6040519080825280601f01601f1916602001820160405280156200023d576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846200024757509392505050565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b620002da6200043d565b6001600160a01b038116620003455760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b62000350816200027e565b50565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106200039d577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310620003ca576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310620003e957662386f26fc10000830492506010015b6305f5e100831062000402576305f5e100830492506008015b61271083106200041757612710830492506004015b606483106200042a576064830492506002015b600a831062000437576001015b92915050565b600a546001600160a01b03163314620004995760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200033c565b565b828054620004a990620005ed565b90600052602060002090601f016020900481019282620004cd576000855562000518565b82601f10620004e857805160ff191683800117855562000518565b8280016001018555821562000518579182015b8281111562000518578251825591602001919060010190620004fb565b50620005269291506200052a565b5090565b5b808211156200052657600081556001016200052b565b600080600080608085870312156200055857600080fd5b505082516020840151604085015160609095015191969095509092509050565b6000815160005b818110156200059b57602081850181015186830152016200057f565b81811115620005ab576000828601525b509290920192915050565b6000620005cf620005c8838662000578565b8462000578565b949350505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200060257607f821691505b6020821081036200062357634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516126f662000678600039600081816106bf01526110c901526000818161052f015261110901526000818161060e01526110890152600061031d01526126f66000f3fe6080604052600436106102045760003560e01c806370a0823111610118578063a22cb465116100a0578063d5abeb011161006f578063d5abeb01146105ff578063e8a3d48514610632578063e985e9c514610647578063f2fde38b14610690578063f8b1cb3c146106b057600080fd5b8063a22cb46514610566578063b88d4fde14610586578063c87b56dd146105a6578063ce3c93ec146105c657600080fd5b80638da5cb5b116100e75780638da5cb5b146104cd578063938e3d7b146104eb57806395d89b411461050b578063a035b1fe14610520578063a0712d681461055357600080fd5b806370a0823114610458578063715018a614610478578063763ad2011461048d57806379575294146104ad57600080fd5b80632f745c591161019b5780634f6ccce71161016a5780634f6ccce7146103b657806355f804b3146103d657806358326b7a146103f65780636352211e146104235780636c0360eb1461044357600080fd5b80632f745c5914610341578063361c6036146103615780633ccfd60b1461038157806342842e0e1461039657600080fd5b806317f38959116101d757806317f38959146102ba57806318160ddd146102cf57806323b872dd146102ee5780632a778c9b1461030e57600080fd5b806301ffc9a71461020957806306fdde031461023e578063081812fc14610260578063095ea7b314610298575b600080fd5b34801561021557600080fd5b506102296102243660046120f8565b6106e3565b60405190151581526020015b60405180910390f35b34801561024a57600080fd5b5061025361070e565b604051610235919061216d565b34801561026c57600080fd5b5061028061027b366004612180565b6107a0565b6040516001600160a01b039091168152602001610235565b3480156102a457600080fd5b506102b86102b33660046121ae565b6107c7565b005b3480156102c657600080fd5b506102536108e1565b3480156102db57600080fd5b506008545b604051908152602001610235565b3480156102fa57600080fd5b506102b86103093660046121da565b6108f0565b34801561031a57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102e0565b34801561034d57600080fd5b506102e061035c3660046121ae565b610921565b34801561036d57600080fd5b506102b861037c36600461221b565b6109b7565b34801561038d57600080fd5b506102b8610cfc565b3480156103a257600080fd5b506102b86103b13660046121da565b610d7e565b3480156103c257600080fd5b506102e06103d1366004612180565b610d99565b3480156103e257600080fd5b506102b86103f13660046122ce565b610e2c565b34801561040257600080fd5b50610416610411366004612180565b610e4b565b604051610235919061232d565b34801561042f57600080fd5b5061028061043e366004612180565b610ef6565b34801561044f57600080fd5b50610253610f56565b34801561046457600080fd5b506102e0610473366004612385565b610f65565b34801561048457600080fd5b506102b8610feb565b34801561049957600080fd5b506102b86104a83660046123a2565b610fff565b3480156104b957600080fd5b506102b86104c83660046122ce565b611035565b3480156104d957600080fd5b50600a546001600160a01b0316610280565b3480156104f757600080fd5b506102b86105063660046122ce565b611050565b34801561051757600080fd5b5061025361106b565b34801561052c57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102e0565b6102b8610561366004612180565b61107a565b34801561057257600080fd5b506102b86105813660046123e9565b611215565b34801561059257600080fd5b506102b86105a1366004612417565b611220565b3480156105b257600080fd5b506102536105c1366004612180565b611258565b3480156105d257600080fd5b506102806105e1366004612385565b6001600160a01b039081166000908152601060205260409020541690565b34801561060b57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102e0565b34801561063e57600080fd5b506102536112bf565b34801561065357600080fd5b506102296106623660046123a2565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561069c57600080fd5b506102b86106ab366004612385565b6112ce565b3480156106bc57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102e0565b60006001600160e01b0319821663780e9d6360e01b14806107085750610708826114b2565b92915050565b60606000805461071d90612497565b80601f016020809104026020016040519081016040528092919081815260200182805461074990612497565b80156107965780601f1061076b57610100808354040283529160200191610796565b820191906000526020600020905b81548152906001019060200180831161077957829003601f168201915b5050505050905090565b60006107ab82611502565b506000908152600460205260409020546001600160a01b031690565b60006107d282610ef6565b9050806001600160a01b0316836001600160a01b0316036108445760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061086057506108608133610662565b6108d25760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161083b565b6108dc8383611561565b505050565b6060600d805461071d90612497565b6108fa33826115cf565b6109165760405162461bcd60e51b815260040161083b906124d1565b6108dc83838361164e565b600061092c83610f65565b821061098e5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161083b565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6109bf6117bf565b6000838152600f6020526040902060085484106109ef576040516380f9b50d60e01b815260040160405180910390fd5b6040516331a9108f60e11b81526004810185905233903090636352211e90602401602060405180830381865afa158015610a2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a51919061251e565b6001600160a01b031614610a78576040516349e27cff60e01b815260040160405180910390fd5b600060018083015460ff1690811115610a9357610a93612317565b14610ab157604051639da7cee760e01b815260040160405180910390fd5b6040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b038416906301ffc9a790602401602060405180830381865afa158015610afc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b20919061253b565b15610bbc576040516331a9108f60e11b81526004810183905233906001600160a01b03851690636352211e90602401602060405180830381865afa158015610b6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b90919061251e565b6001600160a01b031614610bb7576040516349e27cff60e01b815260040160405180910390fd5b610c90565b6001600160a01b038381166000908152601060205260409020541680610c75576040516331a9108f60e11b81526004810184905233906001600160a01b03831690636352211e906024016020604051808303816000875af1158015610c25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c49919061251e565b6001600160a01b031614610c70576040516349e27cff60e01b815260040160405180910390fd5b610c8e565b6040516367c4ae1760e01b815260040160405180910390fd5b505b6001818101805460ff1916828002179055506002810180546001600160a01b0319166001600160a01b0385161790556003810182905560405184907fe0ff833392b9f001daba1da86ad0f9c9ab3f34ddd5a7dc6f7d3dffee0df8110e90600090a2506108dc6001600b55565b610d04611818565b47610d17600a546001600160a01b031690565b6001600160a01b03166108fc829081150290604051600060405180830381858888f19350505050158015610d4f573d6000803e3d6000fd5b5060405181907f430648de173157e069201c943adb2d4e340e7cf5b27b1b09c9cb852f03d63b5690600090a250565b6108dc83838360405180602001604052806000815250611220565b6000610da460085490565b8210610e075760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161083b565b60088281548110610e1a57610e1a612558565b90600052602060002001549050919050565b610e34611818565b8051610e4790600e906020840190612004565b5050565b610e53612088565b6008548210610e75576040516380f9b50d60e01b815260040160405180910390fd5b6000828152600f602090815260409182902082516060810190935280548352600180820154919284019160ff1690811115610eb257610eb2612317565b6001811115610ec357610ec3612317565b81526040805180820190915260028301546001600160a01b03168152600390920154602083810191909152015292915050565b6000818152600260205260408120546001600160a01b0316806107085760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161083b565b6060600e805461071d90612497565b60006001600160a01b038216610fcf5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161083b565b506001600160a01b031660009081526003602052604090205490565b610ff3611818565b610ffd6000611872565b565b611007611818565b6001600160a01b03918216600090815260106020526040902080546001600160a01b03191691909216179055565b61103d611818565b8051610e4790600d906020840190612004565b611058611818565b8051610e4790600c906020840190612004565b60606001805461071d90612497565b600061108560085490565b90507f000000000000000000000000000000000000000000000000000000000000000081106110c75760405163d05cb60960e01b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000082106111075760405163062e62f160e41b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000034146111465760405162bfc92160e01b815260040160405180910390fd5b61115033826118c4565b60408051606081018252838152600060208083018281528451808601865283815280830184905284860152858352600f90915292902081518155915160018084018054939493909160ff199091169083818111156111b0576111b0612317565b021790555060409182015180516002830180546001600160a01b0319166001600160a01b03909216919091179055602001516003909101555181907f176b02bb2d12439ff7a20b59f402cca16c76f50508b13ef3166a600eb719354a90600090a25050565b610e473383836118de565b61122a33836115cf565b6112465760405162461bcd60e51b815260040161083b906124d1565b611252848484846119ac565b50505050565b606061126382611502565b600061126d610f56565b9050600081511161128d57604051806020016040528060008152506112b8565b8061129784611347565b6040516020016112a892919061256e565b6040516020818303038152906040525b9392505050565b6060600c805461071d90612497565b6112d6611818565b6001600160a01b03811661133b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161083b565b61134481611872565b50565b60606000611354836113da565b600101905060008167ffffffffffffffff81111561137457611374612242565b6040519080825280601f01601f19166020018201604052801561139e576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846113a857509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106114195772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611445576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061146357662386f26fc10000830492506010015b6305f5e100831061147b576305f5e100830492506008015b612710831061148f57612710830492506004015b606483106114a1576064830492506002015b600a83106107085760010192915050565b60006001600160e01b031982166380ac58cd60e01b14806114e357506001600160e01b03198216635b5e139f60e01b145b8061070857506301ffc9a760e01b6001600160e01b0319831614610708565b6000818152600260205260409020546001600160a01b03166113445760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161083b565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061159682610ef6565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806115db83610ef6565b9050806001600160a01b0316846001600160a01b0316148061162257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806116465750836001600160a01b031661163b846107a0565b6001600160a01b0316145b949350505050565b826001600160a01b031661166182610ef6565b6001600160a01b0316146116875760405162461bcd60e51b815260040161083b9061259d565b6001600160a01b0382166116e95760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161083b565b6116f683838360016119df565b826001600160a01b031661170982610ef6565b6001600160a01b03161461172f5760405162461bcd60e51b815260040161083b9061259d565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6002600b54036118115760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161083b565b6002600b55565b600a546001600160a01b03163314610ffd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161083b565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610e47828260405180602001604052806000815250611b1f565b816001600160a01b0316836001600160a01b03160361193f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161083b565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6119b784848461164e565b6119c384848484611b52565b6112525760405162461bcd60e51b815260040161083b906125e2565b6119eb84848484611c53565b6001811115611a5a5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b606482015260840161083b565b816001600160a01b038516611ab657611ab181600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611ad9565b836001600160a01b0316856001600160a01b031614611ad957611ad98582611cdb565b6001600160a01b038416611af557611af081611d78565b611b18565b846001600160a01b0316846001600160a01b031614611b1857611b188482611e27565b5050505050565b611b298383611e6b565b611b366000848484611b52565b6108dc5760405162461bcd60e51b815260040161083b906125e2565b60006001600160a01b0384163b15611c4857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611b96903390899088908890600401612634565b6020604051808303816000875af1925050508015611bd1575060408051601f3d908101601f19168201909252611bce91810190612671565b60015b611c2e573d808015611bff576040519150601f19603f3d011682016040523d82523d6000602084013e611c04565b606091505b508051600003611c265760405162461bcd60e51b815260040161083b906125e2565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611646565b506001949350505050565b6001811115611252576001600160a01b03841615611c99576001600160a01b03841660009081526003602052604081208054839290611c939084906126a4565b90915550505b6001600160a01b03831615611252576001600160a01b03831660009081526003602052604081208054839290611cd09084906126bb565b909155505050505050565b60006001611ce884610f65565b611cf291906126a4565b600083815260076020526040902054909150808214611d45576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611d8a906001906126a4565b60008381526009602052604081205460088054939450909284908110611db257611db2612558565b906000526020600020015490508060088381548110611dd357611dd3612558565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611e0b57611e0b6126d3565b6001900381819060005260206000200160009055905550505050565b6000611e3283610f65565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b038216611ec15760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161083b565b6000818152600260205260409020546001600160a01b031615611f265760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161083b565b611f346000838360016119df565b6000818152600260205260409020546001600160a01b031615611f995760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161083b565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461201090612497565b90600052602060002090601f0160209004810192826120325760008555612078565b82601f1061204b57805160ff1916838001178555612078565b82800160010185558215612078579182015b8281111561207857825182559160200191906001019061205d565b506120849291506120cd565b5090565b60408051606081019091526000808252602082019081526020016120c8604051806040016040528060006001600160a01b03168152602001600081525090565b905290565b5b8082111561208457600081556001016120ce565b6001600160e01b03198116811461134457600080fd5b60006020828403121561210a57600080fd5b81356112b8816120e2565b60005b83811015612130578181015183820152602001612118565b838111156112525750506000910152565b60008151808452612159816020860160208601612115565b601f01601f19169290920160200192915050565b6020815260006112b86020830184612141565b60006020828403121561219257600080fd5b5035919050565b6001600160a01b038116811461134457600080fd5b600080604083850312156121c157600080fd5b82356121cc81612199565b946020939093013593505050565b6000806000606084860312156121ef57600080fd5b83356121fa81612199565b9250602084013561220a81612199565b929592945050506040919091013590565b60008060006060848603121561223057600080fd5b83359250602084013561220a81612199565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561227357612273612242565b604051601f8501601f19908116603f0116810190828211818310171561229b5761229b612242565b816040528093508581528686860111156122b457600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156122e057600080fd5b813567ffffffffffffffff8111156122f757600080fd5b8201601f8101841361230857600080fd5b61164684823560208401612258565b634e487b7160e01b600052602160045260246000fd5b81518152602082015160808201906002811061235957634e487b7160e01b600052602160045260246000fd5b80602084015250604083015160018060a01b038151166040840152602081015160608401525092915050565b60006020828403121561239757600080fd5b81356112b881612199565b600080604083850312156123b557600080fd5b82356123c081612199565b915060208301356123d081612199565b809150509250929050565b801515811461134457600080fd5b600080604083850312156123fc57600080fd5b823561240781612199565b915060208301356123d0816123db565b6000806000806080858703121561242d57600080fd5b843561243881612199565b9350602085013561244881612199565b925060408501359150606085013567ffffffffffffffff81111561246b57600080fd5b8501601f8101871361247c57600080fd5b61248b87823560208401612258565b91505092959194509250565b600181811c908216806124ab57607f821691505b6020821081036124cb57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60006020828403121561253057600080fd5b81516112b881612199565b60006020828403121561254d57600080fd5b81516112b8816123db565b634e487b7160e01b600052603260045260246000fd5b60008351612580818460208801612115565b835190830190612594818360208801612115565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061266790830184612141565b9695505050505050565b60006020828403121561268357600080fd5b81516112b8816120e2565b634e487b7160e01b600052601160045260246000fd5b6000828210156126b6576126b661268e565b500390565b600082198211156126ce576126ce61268e565b500190565b634e487b7160e01b600052603160045260246000fdfea164736f6c634300080e000a";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_maxSupply";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_price";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_versions";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "AlreadyMutated";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidDripId";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidPrice";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidVersionId";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidVersions";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "MaxSupplyReached";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnsupportedTokenContract";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "approved";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "dripId";
            readonly type: "uint256";
        }];
        readonly name: "Minted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "dripId";
            readonly type: "uint256";
        }];
        readonly name: "Mutated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "funds";
            readonly type: "uint256";
        }];
        readonly name: "Withdrawn";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "baseURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "contractURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "dripId";
            readonly type: "uint256";
        }];
        readonly name: "drip";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "version";
                readonly type: "uint256";
            }, {
                readonly internalType: "enum DripStatus";
                readonly name: "status";
                readonly type: "uint8";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "tokenContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "tokenId";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct DripMutation";
                readonly name: "mutation";
                readonly type: "tuple";
            }];
            readonly internalType: "struct Drip";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "dropId";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "dropURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "tokenContract";
            readonly type: "address";
        }];
        readonly name: "getTokenContractInterface";
        readonly outputs: readonly [{
            readonly internalType: "contract ITokenInterface";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "maxSupply";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "versionId";
            readonly type: "uint256";
        }];
        readonly name: "mint";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "dripId";
            readonly type: "uint256";
        }, {
            readonly internalType: "contract IERC721";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "mutate";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "price";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "newURI";
            readonly type: "string";
        }];
        readonly name: "setBaseURI";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "newURI";
            readonly type: "string";
        }];
        readonly name: "setContractURI";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "newURI";
            readonly type: "string";
        }];
        readonly name: "setDropURI";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "tokenContract";
            readonly type: "address";
        }, {
            readonly internalType: "contract ITokenInterface";
            readonly name: "_ITokenInterface";
            readonly type: "address";
        }];
        readonly name: "setTokenContractInterface";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "index";
            readonly type: "uint256";
        }];
        readonly name: "tokenByIndex";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "index";
            readonly type: "uint256";
        }];
        readonly name: "tokenOfOwnerByIndex";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "totalSupply";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "versions";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "withdraw";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): DropInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): Drop;
}
export {};
