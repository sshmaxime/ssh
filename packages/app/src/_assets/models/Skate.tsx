/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { GLTF } from "three-stdlib";
import { useLoader, useFrame } from "@react-three/fiber";
import { BufferGeometry, TextureLoader } from "three";
import { createCanvas, loadImage } from "canvas";
import { useThree } from "@react-three/fiber";
import { Center, useGLTF } from "@react-three/drei";

type GLTFResult = GLTF & {
  nodes: {
    Tube: THREE.Mesh;
    Tube2_4: THREE.Mesh;
    Tube2_5: THREE.Mesh;
    Tube_1: THREE.Mesh;
    Tube2_1_1: THREE.Mesh;
    Tube2_1_2: THREE.Mesh;
    Tube_2: THREE.Mesh;
    Tube2_2_1: THREE.Mesh;
    Tube2_2_2: THREE.Mesh;
    Tube_3: THREE.Mesh;
    Tube2_3_1: THREE.Mesh;
    Tube2_3_2: THREE.Mesh;
    Absorber1: THREE.Mesh;
    Trucks: THREE.Mesh;
    Deck: THREE.Mesh;
    Placeholder: THREE.Mesh;
  };
  materials: {
    Wheels: THREE.MeshStandardMaterial;
    Trucks: THREE.MeshStandardMaterial;
    Deck: THREE.MeshStandardMaterial;
    Placeholder: THREE.MeshStandardMaterial;
  };
};

export default function Model({ ...props }: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials } = useGLTF(
    "/models/skate/skate-transformed.glb"
  ) as GLTFResult;

  const [deckTexture] = useLoader(TextureLoader, [
    "/models/skate/Tex/Artboard 2.png",
  ]);

  const [placeholderTexture] = useLoader(TextureLoader, [
    "/models/skate/Tex/imgForMiddle.png",
  ]);

  // Deck
  deckTexture.flipY = false;
  materials.Deck.map = deckTexture;
  materials.Deck.color = null as any;
  materials.Deck.toneMapped = false;

  // Placeholder
  placeholderTexture.flipY = false;
  materials.Placeholder.map = placeholderTexture;
  materials.Placeholder.color = null as any;
  materials.Placeholder.toneMapped = false;

  const canvas = document.createElement("canvas");

  const ctx = canvas.getContext("2d") as any;
  ctx.canvas.width = 500;
  ctx.canvas.height = 500;
  ctx.fillStyle = "rgba(0, 0, 0, 0)";
  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);

  ctx.textAlign = "center";
  ctx.font = "700 50px montserrat";
  ctx.fillStyle = "black";
  ctx.fillText("#3211", ctx.canvas.width / 2, ctx.canvas.height / 2);

  const newMaterial = new THREE.CanvasTexture(canvas);

  return (
    <Center>
      <group ref={group} {...props} dispose={null}>
        <mesh
          geometry={nodes.Deck.geometry}
          material={materials.Deck}
          rotation={[Math.PI / 2, 0, 0]}
        />
        <mesh
          geometry={nodes.Placeholder.geometry}
          material={materials.Placeholder}
          rotation={[Math.PI / 2, 0, 0]}
        />
        <mesh
          position={[12.8, 6.75, 0]}
          rotation={[Math.PI / 2, 0, -Math.PI / -2]}
        >
          <planeGeometry args={[10, 10, 10, 10]} />
          <meshBasicMaterial transparent map={newMaterial} />
        </mesh>
      </group>
    </Center>
  );
}

useGLTF.preload("/skate-transformed.glb");
